{"data":{"markdownRemark":{"html":"<blockquote>\n<p>This assumes there is already a directory set up, but that's about it.\n<a href=\"https://1drv.ms/f/s!AoLkNBOSNnKyjaMLfS0m6_fLIEhk_A\">Example Files</a></p>\n</blockquote>\n<p>These are my notes from the LinkedIn Learning tutorial <a href=\"https://www.linkedin.com/learning/graphql-essential-training/data-persistence-with-sql\"><em>GraphQL Essential Training</em></a>. The handwritten versions can be found at the following links:</p>\n<h2>Set-Up a New Node.js Server</h2>\n<p>Make sure you are in the root directory of your project by typing <code class=\"language-text\">ls</code> into your integrated terminal. After that is confirmed, run <code class=\"language-text\">npm init</code> to initiate a node.js project with a package.json. This will walk you through the process as follows:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\">prp1277@home MINGW64 ~/GitHub-Repos/src-job-land\n$ <span class=\"token function\">npm</span> init\nThis utility will walk you through creating a package.json file.\nIt only covers the <span class=\"token function\">most</span> common items, and tries to guess sensible defaults.\n\nSee <span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">npm</span> <span class=\"token function\">help</span> json<span class=\"token variable\">`</span></span> <span class=\"token keyword\">for</span> definitive documentation on these fields\nand exactly what they do.\n\nUse <span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">npm</span> <span class=\"token function\">install</span> <span class=\"token operator\">&lt;</span>pkg<span class=\"token operator\">></span><span class=\"token variable\">`</span></span> afterwards to <span class=\"token function\">install</span> a package and\nsave it as a dependency <span class=\"token keyword\">in</span> the package.json file.\n\nPress ^C at any <span class=\"token function\">time</span> to quit.\npackage name: <span class=\"token punctuation\">(</span>src-job-land<span class=\"token punctuation\">)</span>\nversion: <span class=\"token punctuation\">(</span>1.0.0<span class=\"token punctuation\">)</span>\ndescription: Job Land\nentry point: <span class=\"token punctuation\">(</span>index.js<span class=\"token punctuation\">)</span>\n<span class=\"token function\">test</span> command:\n<span class=\"token function\">git</span> repository:\nkeywords:\nauthor: Patrick Powell\nlicense: <span class=\"token punctuation\">(</span>ISC<span class=\"token punctuation\">)</span>\nAbout to <span class=\"token function\">write</span> to C:\\\\GitHub-Repos\\src-job-land\\package.json:\n\n<span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"name\"</span><span class=\"token keyword\">:</span> <span class=\"token string\">\"src-job-land\"</span>,\n  <span class=\"token string\">\"version\"</span><span class=\"token keyword\">:</span> <span class=\"token string\">\"1.0.0\"</span>,\n  <span class=\"token string\">\"description\"</span><span class=\"token keyword\">:</span> <span class=\"token string\">\"Job Land\"</span>,\n  <span class=\"token string\">\"main\"</span><span class=\"token keyword\">:</span> <span class=\"token string\">\"index.js\"</span>,\n  <span class=\"token string\">\"scripts\"</span><span class=\"token keyword\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"test\"</span><span class=\"token keyword\">:</span> <span class=\"token string\">\"echo \\\"Error: no test specified\\\" &amp;&amp; exit 1\"</span>\n  <span class=\"token punctuation\">}</span>,\n  <span class=\"token string\">\"author\"</span><span class=\"token keyword\">:</span> <span class=\"token string\">\"Patrick Powell\"</span>,\n  <span class=\"token string\">\"license\"</span><span class=\"token keyword\">:</span> <span class=\"token string\">\"ISC\"</span>\n<span class=\"token punctuation\">}</span>\n\nIs this ok? <span class=\"token punctuation\">(</span>yes<span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<br />\n<h2>Install Dependencies and Set-Up the Environment</h2>\n<p>First, install the dev dependencies:\n<code class=\"language-text\">npm install --save-dev babel-cli- babel-preset-env babel-preset-stage-0</code></p>\n<p>then we'll install the project dependencies:\n<code class=\"language-text\">npm install --save express nodemon</code></p>\n<p>Now we have a package.json, package-lock.json and the node_modules directory along with our other project files. We will still need to add a few things before we are able to do anything with our project. We'll start by adding a file called <code class=\"language-text\">.babelrc</code> in the root directory of the project. Once that is added, open the file and paste the following:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-json line-numbers\"><code class=\"language-json\">/*  './root/.babelrc' */\n<span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"presets\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"env\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"stage-0\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<br/>\n<h2>Creating a Schema - schema.js</h2>\n<p>We are getting closer to starting our server, but first we have to create one more file and make some updates to our index.js. If you haven't already, add a folder named <code class=\"language-text\">data</code> in your root directory. Once you have <code class=\"language-text\">./root/data/</code> add a file named <code class=\"language-text\">schema.js</code>. This will tell GraphQL and MongoDB the structure and types of our data.</p>\n<p>In <code class=\"language-text\">./root/data/schema.js</code> add:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> buildSchema <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"graphql\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/*\n In this case, we are building 3 types: Friend, Email and Query\n and adding details about the corresponding data types \n*/</span>\n\n<span class=\"token keyword\">const</span> schema <span class=\"token operator\">=</span> <span class=\"token function\">buildSchema</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`\n    type Friend {\n        id: ID\n        firstName: String\n        lastName: String\n        gender: String\n        language: String\n        email: String\n    }\n\n    type Query {\n        friend: Friend\n    }\n\n    input FriendInput {\n        id: ID\n        firstName: String!\n        lastName: String\n        gender: String\n        language: String\n        email: String\n    }\n\n    type Mutation {\n        createFriend(input: FriendInput): Friend\n    }\n`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> schema<span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<br />\n<h2>Updating index.js</h2>\n<p>Next, we need to add an entry point for the server. When we set up our package.json we specified that the entry point will be index.js, so open or create <strong>index.js</strong> and add the following:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">import</span> express <span class=\"token keyword\">from</span> <span class=\"token string\">\"express\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> graphqlHTTP <span class=\"token keyword\">from</span> <span class=\"token string\">\"express-graphql\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> schema <span class=\"token keyword\">from</span> <span class=\"token string\">\"./schema\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token function\">express</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  res<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"GraphQL is amazing!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Friend</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> firstName<span class=\"token punctuation\">,</span> lastName<span class=\"token punctuation\">,</span> gender<span class=\"token punctuation\">,</span> language<span class=\"token punctuation\">,</span> email <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>id <span class=\"token operator\">=</span> id<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>firstName <span class=\"token operator\">=</span> firstName<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>lastName <span class=\"token operator\">=</span> lastName<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>gender <span class=\"token operator\">=</span> gender<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>language <span class=\"token operator\">=</span> language<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>email <span class=\"token operator\">=</span> email<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> friendDatabase <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> root <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  friend<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      id<span class=\"token punctuation\">:</span> <span class=\"token number\">1277</span><span class=\"token punctuation\">,</span>\n      firstName<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Patrick\"</span><span class=\"token punctuation\">,</span>\n      lastName<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Powell\"</span><span class=\"token punctuation\">,</span>\n      gender<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Male\"</span><span class=\"token punctuation\">,</span>\n      language<span class=\"token punctuation\">:</span> <span class=\"token string\">\"English\"</span><span class=\"token punctuation\">,</span>\n      emails<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span> email<span class=\"token punctuation\">:</span> <span class=\"token string\">\"me@me.com\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> email<span class=\"token punctuation\">:</span> <span class=\"token string\">\"another@me.com\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  createFriend<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> input <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> id <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"crypto\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">randomBytes</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hex\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    friendDatabase<span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> input<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Friend</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span> input<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>\n  <span class=\"token string\">\"/graphql\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">graphqlHTTP</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    schema<span class=\"token punctuation\">:</span> schema<span class=\"token punctuation\">,</span>\n    rootValue<span class=\"token punctuation\">:</span> root<span class=\"token punctuation\">,</span>\n    graphiql<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token number\">8080</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Running server on port localhost:8080/graphql\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<br />\n<h2>Install Additional Dependencies</h2>\n<p>So at this point, we've build a schema and told GraphQL where the entry point is... but we still haven't installed GraphQL. Open your terminal again and type:</p>\n<p><code class=\"language-text\">npm install --save express-graphql graphql</code></p>\n<blockquote>\n<p>One thing to point out - make sure the project's directory is not named \"graphql\" or you'll have issues.</p>\n</blockquote>\n<p>Make sure all your files are saved and start the server using <code class=\"language-text\">npm start</code> and browse to <a href=\"http://localhost:8080/graphql\">localhost:8080/graphql</a>, where you'll find an instance of GraphiQL. The queries available at this point of the tutorial are limited, but since there is quite a bit left to do, I'm going to leave that for another post.</p>\n<h3>Next Time: Integrating MongoDB and SQLite<br/></h3>\n<h4>Questions? Comments? Send me an <a href=\"mailto:prp1277@gmail.com\">email</a> and let me know what you think!</h4>","frontmatter":{"title":"LinkedIn GQL","date":"2018-08-22"}}},"pageContext":{"slug":"/docs/pages/LyndaGQL/"}}