/*
#####################
# All Files Query ###
#####################
# {
#  allFile {
#    edges {
#      node {
#        id
#        changeTime(fromNow: true)
#        sourceInstanceName
#        relativePath
#        publicURL
#      }
#    }
#  }
#  allImageSharp {
#    edges {
#      node {
#        id
#        fluid {
#          srcWebp
#        }
#      }
#    }
#  }
#  allMarkdownRemark{
#    edges{
#      node{
#        id
#        timeToRead
#        headings{
#          value
#        }
#        html
#        fields{
#          slug
#        }
#      }
#    }
#  }
#}
#
*/
{
  "data": {
    "allFile": {
      "edges": [
        {
          "node": {
            "id": "136f8f6e-60e0-58e6-ba63-d5ddf08ebe81",
            "changeTime": "14 days ago",
            "sourceInstanceName": "src",
            "relativePath": "components/Avatar.png",
            "publicURL": "/static/Avatar-38b3fafcd8c85350572d7487d2ac6940.png"
          }
        },
        {
          "node": {
            "id": "51898cf5-36c4-50a1-af0a-5cde5e94996d",
            "changeTime": "2 days ago",
            "sourceInstanceName": "src",
            "relativePath": "components/Card.jsx",
            "publicURL": "/static/Card-0899a122e30f7d155338a9797fb679a2.jsx"
          }
        },
        {
          "node": {
            "id": "a927a3aa-587e-53d1-abc6-f2820b96802e",
            "changeTime": "2 days ago",
            "sourceInstanceName": "src",
            "relativePath": "components/Footer.jsx",
            "publicURL": "/static/Footer-20f01ca88c80896b3d397cd202866b0d.jsx"
          }
        },
        {
          "node": {
            "id": "e9db3a4c-735e-5077-891b-57d5f026b8b4",
            "changeTime": "3 days ago",
            "sourceInstanceName": "src",
            "relativePath": "components/Introduction.jsx",
            "publicURL": "/static/Introduction-66dbe15947a7035ca50c8ca12d1ab2dd.jsx"
          }
        },
        {
          "node": {
            "id": "2e9bfbe8-5af9-5771-8e53-1c84d8d616b2",
            "changeTime": "12 days ago",
            "sourceInstanceName": "src",
            "relativePath": "components/About.jsx",
            "publicURL": "/static/About-01e20b47c370743fd7a033880bfbbc80.jsx"
          }
        },
        {
          "node": {
            "id": "887bfc54-d49a-5504-86df-95adcb1db990",
            "changeTime": "6 days ago",
            "sourceInstanceName": "src",
            "relativePath": "components/Navbar.jsx",
            "publicURL": "/static/Navbar-cd69441d136369681c570773100a1dcd.jsx"
          }
        },
        {
          "node": {
            "id": "2da46ece-2e5a-5cdb-b1bb-07a8869345cd",
            "changeTime": "4 days ago",
            "sourceInstanceName": "src",
            "relativePath": "components/Media.jsx",
            "publicURL": "/static/Media-d9805f74287bd68b95b3e886dceca8f6.jsx"
          }
        },
        {
          "node": {
            "id": "cacbb613-39d7-5a2e-837c-2524b5036883",
            "changeTime": "12 days ago",
            "sourceInstanceName": "src",
            "relativePath": "components/SocialMedia.jsx",
            "publicURL": "/static/SocialMedia-6c1ba0954b53fecfcbd091581004ef44.jsx"
          }
        },
        {
          "node": {
            "id": "b8a9743f-0cd0-5baf-914e-2c09ad308305",
            "changeTime": "2 days ago",
            "sourceInstanceName": "pages",
            "relativePath": "404.js",
            "publicURL": "/static/404-5a2c3593b01ab6567e69c6495f5fa9c4.js"
          }
        },
        {
          "node": {
            "id": "a501335f-2c27-549a-9a2b-6afc4aef97cc",
            "changeTime": "14 days ago",
            "sourceInstanceName": "src",
            "relativePath": "components/Paginate.jsx",
            "publicURL": "/static/Paginate-07f7ea8c13ce17f31aca3fb54a0b1f59.jsx"
          }
        },
        {
          "node": {
            "id": "e2cb03c4-7ac9-52fb-a991-99dd547c5281",
            "changeTime": "2 days ago",
            "sourceInstanceName": "pages",
            "relativePath": "index.css",
            "publicURL": "/static/index-134b8096f029ceb1924730e206f18211.css"
          }
        },
        {
          "node": {
            "id": "7f8f1d43-3a85-5b9e-a569-06aa6674f992",
            "changeTime": "4 days ago",
            "sourceInstanceName": "src",
            "relativePath": "pages/MyImgs.js",
            "publicURL": "/static/MyImgs-4446cd48328d6ba9095cf644dd3b35f3.js"
          }
        },
        {
          "node": {
            "id": "0d171bd9-f75b-5564-a3c6-7f6c6925abab",
            "changeTime": "2 days ago",
            "sourceInstanceName": "src",
            "relativePath": "pages/index.js",
            "publicURL": "/static/index-86351c21870a6001f91f74262f6abda2.js"
          }
        },
        {
          "node": {
            "id": "80bd87ae-d170-5665-8b69-430b5d19126b",
            "changeTime": "2 days ago",
            "sourceInstanceName": "src",
            "relativePath": "pages/my-files.jsx",
            "publicURL": "/static/my-files-40a0bce3125670833b698ed24c278eff.jsx"
          }
        },
        {
          "node": {
            "id": "bbedadbf-1858-57ba-b052-bba4f4fe596c",
            "changeTime": "2 days ago",
            "sourceInstanceName": "src",
            "relativePath": "data/PageLinks.jsx",
            "publicURL": "/static/PageLinks-c931bb7eb03b57ea6ae1096440f8c431.jsx"
          }
        },
        {
          "node": {
            "id": "cbebb67c-699b-5077-be9b-24347d62974a",
            "changeTime": "4 days ago",
            "sourceInstanceName": "src",
            "relativePath": "docs/index.md",
            "publicURL": "/static/index-8bc725e8f2e256cc44db286e96261787.md"
          }
        },
        {
          "node": {
            "id": "13149a0c-2ab9-5ff3-977d-e286e92ee51d",
            "changeTime": "14 days ago",
            "sourceInstanceName": "src",
            "relativePath": "data/PathTable.jsx",
            "publicURL": "/static/PathTable-f0b8350a4be063ef5b114623ffa2918d.jsx"
          }
        },
        {
          "node": {
            "id": "eb4eebf2-7e9e-56e8-a948-8777b6784852",
            "changeTime": "14 days ago",
            "sourceInstanceName": "src",
            "relativePath": "data/AllFiles.jsx",
            "publicURL": "/static/AllFiles-1db558dd1a59b197e5cb1187e18ba9bd.jsx"
          }
        },
        {
          "node": {
            "id": "e39a6701-bea2-599e-81c7-931340c42a97",
            "changeTime": "14 days ago",
            "sourceInstanceName": "src",
            "relativePath": "docs/pages/Checklist.md",
            "publicURL": "/static/Checklist-2852002e39bce0fb081f63f7cceccab1.md"
          }
        },
        {
          "node": {
            "id": "449ca063-479a-5266-b3fa-52f2d2900e1c",
            "changeTime": "4 days ago",
            "sourceInstanceName": "src",
            "relativePath": "templates/mdCompiler.js",
            "publicURL": "/static/mdCompiler-dbbb55f07b541d79e7d4355c4e56e5c7.js"
          }
        },
        {
          "node": {
            "id": "d40de8db-630f-5710-9e6a-3627850062ba",
            "changeTime": "6 days ago",
            "sourceInstanceName": "src",
            "relativePath": "docs/pages/FavoriteMacros.md",
            "publicURL": "/static/FavoriteMacros-25e4a9c7e803c3ceedbcab5ea3ec7642.md"
          }
        },
        {
          "node": {
            "id": "3ab2a0f7-a742-59f6-81d8-6bff895b6c65",
            "changeTime": "14 days ago",
            "sourceInstanceName": "src",
            "relativePath": "docs/pages/FinanceWidgets.md",
            "publicURL": "/static/FinanceWidgets-e2a04c186a9814fa9da45506dc488e89.md"
          }
        },
        {
          "node": {
            "id": "f82aba84-6ce8-5036-909e-d4b9b96e0c0a",
            "changeTime": "2 days ago",
            "sourceInstanceName": "src",
            "relativePath": "docs/pages/Get&Transform.md",
            "publicURL": "/static/Get&Transform-a8a29ad37cc6239afce770068832a27a.md"
          }
        },
        {
          "node": {
            "id": "79c89a2a-b828-5d5f-b714-04b5578fe438",
            "changeTime": "3 days ago",
            "sourceInstanceName": "src",
            "relativePath": "docs/pages/GraphQLQueries.md",
            "publicURL": "/static/GraphQLQueries-4e035609600443a4dc0d38207733d94b.md"
          }
        },
        {
          "node": {
            "id": "05e595ad-d568-58aa-9f0c-714412bde3e8",
            "changeTime": "12 days ago",
            "sourceInstanceName": "src",
            "relativePath": "docs/pages/LearnProgramming.md",
            "publicURL": "/static/LearnProgramming-477954c9444843353980ee12edc70573.md"
          }
        },
        {
          "node": {
            "id": "d369fdb3-dbd1-5d67-b483-7002ad82bc02",
            "changeTime": "14 days ago",
            "sourceInstanceName": "src",
            "relativePath": "docs/pages/LyndaGQL.md",
            "publicURL": "/static/LyndaGQL-624a3548a3765e96d493aa7605df3bb3.md"
          }
        },
        {
          "node": {
            "id": "96cb0c2b-b59b-5434-bb5a-7659de345946",
            "changeTime": "14 days ago",
            "sourceInstanceName": "src",
            "relativePath": "docs/pages/NotADeveloper.md",
            "publicURL": "/static/NotADeveloper-b0ac6859ae7c1b463b91fcb550470b5c.md"
          }
        },
        {
          "node": {
            "id": "76071762-dd4c-55f4-95a2-e60a51735525",
            "changeTime": "6 days ago",
            "sourceInstanceName": "src",
            "relativePath": "docs/pages/resume.md",
            "publicURL": "/static/resume-e6a70f69193b367ded581aca25e75524.md"
          }
        },
        {
          "node": {
            "id": "5b85a859-ffe7-5316-a4b0-ea5739706ee6",
            "changeTime": "11 days ago",
            "sourceInstanceName": "src",
            "relativePath": "favicon.svg",
            "publicURL": "/static/favicon-f42ec13f96c6a591202bee2c4c0afeb1.svg"
          }
        },
        {
          "node": {
            "id": "6f90c4be-be6a-542a-b1a3-47efb974361a",
            "changeTime": "13 days ago",
            "sourceInstanceName": "src",
            "relativePath": "templates/PrismTheme.css",
            "publicURL": "/static/PrismTheme-5dd8d1ac3b50b2bc99e920b564833143.css"
          }
        },
        {
          "node": {
            "id": "6cd8cb29-2e07-579d-8d52-1e6d88ce1eb2",
            "changeTime": "14 days ago",
            "sourceInstanceName": "src",
            "relativePath": "docs/pages/Gatsby-Advanced.md",
            "publicURL": "/static/Gatsby-Advanced-69dfcec7c1294a991511de0cea1e8390.md"
          }
        },
        {
          "node": {
            "id": "ace21f2e-be33-56f6-9277-c023281b0533",
            "changeTime": "14 days ago",
            "sourceInstanceName": "src",
            "relativePath": "docs/img/Dubya.jpg",
            "publicURL": "/static/Dubya-0045112e369c61baa8813fded93c5e4f.jpg"
          }
        },
        {
          "node": {
            "id": "0191d3c3-eae2-52b6-aced-eebeaf64b747",
            "changeTime": "14 days ago",
            "sourceInstanceName": "src",
            "relativePath": "docs/img/CatastrophicFail.jpg",
            "publicURL": "/static/CatastrophicFail-caa0c6fcf631a8e8ae30a47a7a71c0e0.jpg"
          }
        },
        {
          "node": {
            "id": "d42ca10c-3171-5113-b05c-587f785fd081",
            "changeTime": "14 days ago",
            "sourceInstanceName": "src",
            "relativePath": "docs/img/LinkedIn.jpg",
            "publicURL": "/static/LinkedIn-dfbd71c0fae03cd7d16ce2433df200e9.jpg"
          }
        },
        {
          "node": {
            "id": "396c98b6-4265-596d-861e-62862942bcec",
            "changeTime": "14 days ago",
            "sourceInstanceName": "src",
            "relativePath": "docs/img/StudyGuidesTweet.JPG",
            "publicURL": "/static/StudyGuidesTweet-6993928d663e0e6cc67857c0cf1768ba.JPG"
          }
        },
        {
          "node": {
            "id": "6cd73f5b-0508-52eb-8676-65ff4e559da3",
            "changeTime": "14 days ago",
            "sourceInstanceName": "src",
            "relativePath": "docs/img/partner-in-crime.jpg",
            "publicURL": "/static/partner-in-crime-d4f40924de833854691f551ac25910da.jpg"
          }
        },
        {
          "node": {
            "id": "cf73d3d9-548b-5ec4-b386-a12579fb23c0",
            "changeTime": "14 days ago",
            "sourceInstanceName": "src",
            "relativePath": "docs/img/WeddingSiblings.jpg",
            "publicURL": "/static/WeddingSiblings-1909d923ae1d1a7119c63d5c78c1d794.jpg"
          }
        },
        {
          "node": {
            "id": "efae6f72-477e-58da-afa2-ea0bd123eed4",
            "changeTime": "14 days ago",
            "sourceInstanceName": "src",
            "relativePath": "docs/img/cigars-and-scotch.jpg",
            "publicURL": "/static/cigars-and-scotch-2e7a5a2c230fa5dcbdc83aa314a0d03d.jpg"
          }
        },
        {
          "node": {
            "id": "070503c4-1a42-5f38-bc12-f51e10961e75",
            "changeTime": "14 days ago",
            "sourceInstanceName": "src",
            "relativePath": "docs/img/robert-wedding-suits.jpg",
            "publicURL": "/static/robert-wedding-suits-718d6286343770cd871b5d8325d042ec.jpg"
          }
        },
        {
          "node": {
            "id": "bee12c13-1808-5133-b5d5-16da19e7275c",
            "changeTime": "14 days ago",
            "sourceInstanceName": "src",
            "relativePath": "docs/img/pre-boulay-wedding.jpg",
            "publicURL": "/static/pre-boulay-wedding-53b1628fef8a2ee177a2b8413409edc9.jpg"
          }
        },
        {
          "node": {
            "id": "b37c4791-6211-546b-84e7-e47f45bce37e",
            "changeTime": "14 days ago",
            "sourceInstanceName": "src",
            "relativePath": "docs/img/corn-logo.PNG",
            "publicURL": "/static/corn-logo-06bbb0653f8a43b0f24e1d1d3f37d3e8.PNG"
          }
        },
        {
          "node": {
            "id": "f6c9aed1-616d-5252-8fca-27caf0ecea70",
            "changeTime": "12 days ago",
            "sourceInstanceName": "src",
            "relativePath": "docs/img/2012-12-20 16.50.42.jpg",
            "publicURL": "/static/2012-12-20 16.50.42-965a50f7803cd0ea3ebfee3b52415089.jpg"
          }
        },
        {
          "node": {
            "id": "19194eaa-4837-549b-8092-6bfe2c500195",
            "changeTime": "12 days ago",
            "sourceInstanceName": "src",
            "relativePath": "docs/img/Backyard.png",
            "publicURL": "/static/Backyard-b736d2f25ace85635d790f6e8daa6edc.png"
          }
        },
        {
          "node": {
            "id": "6fb995bc-2788-5504-ae58-5100834e58d5",
            "changeTime": "2 days ago",
            "sourceInstanceName": "img",
            "relativePath": "404.gif",
            "publicURL": "/static/404-1e6e1c9faff405d21dd6c62700630536.gif"
          }
        },
        {
          "node": {
            "id": "e0db069c-c95b-574d-9988-02cd67535558",
            "changeTime": "7 minutes ago",
            "sourceInstanceName": "src",
            "relativePath": ".vscode/queries.gql",
            "publicURL": "/static/queries-df6257a498babd2998af1fdab2e6f78e.gql"
          }
        }
      ]
    },
    "allImageSharp": {
      "edges": [
        {
          "node": {
            "id": "f7ccf3ae-cabb-5b2a-b0b3-ccf93b19e34a",
            "fluid": {
              "srcWebp": "/static/38b3fafcd8c85350572d7487d2ac6940/9fb3c/Avatar.webp"
            }
          }
        },
        {
          "node": {
            "id": "74c43af2-b184-5e5f-9bea-ee82421b9005",
            "fluid": {
              "srcWebp": "/static/0045112e369c61baa8813fded93c5e4f/44a03/Dubya.webp"
            }
          }
        },
        {
          "node": {
            "id": "8f763dc1-71ec-5e0d-8bd3-d896ebd801b3",
            "fluid": {
              "srcWebp": "/static/caa0c6fcf631a8e8ae30a47a7a71c0e0/be19b/CatastrophicFail.webp"
            }
          }
        },
        {
          "node": {
            "id": "b9d3f19f-ba7b-5959-b162-fea3dcb181ae",
            "fluid": {
              "srcWebp": "/static/dfbd71c0fae03cd7d16ce2433df200e9/7ce19/LinkedIn.webp"
            }
          }
        },
        {
          "node": {
            "id": "0edd1817-92c1-5aab-9b77-ba02b851482d",
            "fluid": {
              "srcWebp": "/static/6993928d663e0e6cc67857c0cf1768ba/765ea/StudyGuidesTweet.webp"
            }
          }
        },
        {
          "node": {
            "id": "8f2d1bec-3c12-5875-a060-22f84a442786",
            "fluid": {
              "srcWebp": "/static/d4f40924de833854691f551ac25910da/d7ce8/partner-in-crime.webp"
            }
          }
        },
        {
          "node": {
            "id": "c0ee9717-8e5f-5c10-a4dd-7022dda0bd4d",
            "fluid": {
              "srcWebp": "/static/1909d923ae1d1a7119c63d5c78c1d794/765ea/WeddingSiblings.webp"
            }
          }
        },
        {
          "node": {
            "id": "e2eb195b-8617-56f7-8c10-0acf926bb8db",
            "fluid": {
              "srcWebp": "/static/2e7a5a2c230fa5dcbdc83aa314a0d03d/765ea/cigars-and-scotch.webp"
            }
          }
        },
        {
          "node": {
            "id": "2927e71a-c9bd-5c41-ac9c-da8fcc93589f",
            "fluid": {
              "srcWebp": "/static/718d6286343770cd871b5d8325d042ec/765ea/robert-wedding-suits.webp"
            }
          }
        },
        {
          "node": {
            "id": "476d9223-15bd-5cf5-a99d-ea0deb1bc330",
            "fluid": {
              "srcWebp": "/static/53b1628fef8a2ee177a2b8413409edc9/765ea/pre-boulay-wedding.webp"
            }
          }
        },
        {
          "node": {
            "id": "14dfa19e-51c4-57d3-a604-751bac5bcbe7",
            "fluid": {
              "srcWebp": "/static/06bbb0653f8a43b0f24e1d1d3f37d3e8/a4672/corn-logo.webp"
            }
          }
        },
        {
          "node": {
            "id": "4fbddc3d-64cf-5fee-b0f2-8cfde2e42458",
            "fluid": {
              "srcWebp": "/static/965a50f7803cd0ea3ebfee3b52415089/765ea/2012-12-20 16.50.42.webp"
            }
          }
        },
        {
          "node": {
            "id": "00fff77a-b0d0-574d-89eb-bb977929d5a8",
            "fluid": {
              "srcWebp": "/static/b736d2f25ace85635d790f6e8daa6edc/a4672/Backyard.webp"
            }
          }
        }
      ]
    },
    "allMarkdownRemark": {
      "edges": [
        {
          "node": {
            "id": "0866313d-41d3-5f5a-8b93-3c0eb12ecf09",
            "timeToRead": 1,
            "headings": [
              {
                "value": "Posts"
              },
              {
                "value": "Favorite Macros"
              },
              {
                "value": "Get & Transform"
              },
              {
                "value": "To Do"
              },
              {
                "value": "Stock Widget"
              },
              {
                "value": "Gatsby Advanced Starter"
              },
              {
                "value": "Learning Programming"
              },
              {
                "value": "Essentials of GraphQL"
              },
              {
                "value": "Not a Developer"
              }
            ],
            "html": "<h1>Posts</h1>\n<h4><a href=\"./pages/FavoriteMacros\">Favorite Macros</a></h4>\n<p>Some VBA from my personal macro workbook to automate formatting Excel documents</p>\n<h4><a href=\"./pages/Get&#x26;Transform\">Get &#x26; Transform</a></h4>\n<p>A question posed to the Reddit community to query data about financial assets</p>\n<h4><a href=\"./pages/Checklist\">To Do</a></h4>\n<p>My personal to-do list for this website and others</p>\n<h4><a href=\"./pages/FinanceWidgets\">Stock Widget</a></h4>\n<p>This page uses a widget from <a href=\"https://www.investing.com?utm_source=WMT&#x26;utm_medium=referral&#x26;utm_campaign=LEADING_STOCKS&#x26;utm_content=Footer%20Link\">investing.com</a> to track daily changes in the stock market</p>\n<h4><a href=\"./pages/Gatsby-Advanced\">Gatsby Advanced Starter</a></h4>\n<p><code class=\"language-text\">gatsby-node.js</code> - code borrowed from the <a href=\"https://raw.githubusercontent.com/Vagr9K/gatsby-advanced-starter/master/gatsby-node.js\">Advanced Gatsby Starter</a></p>\n<h4><a href=\"./pages/LearnProgramming\">Learning Programming</a></h4>\n<p>This is currently a blank page</p>\n<h4><a href=\"./pages/LyndaGQL\">Essentials of GraphQL</a></h4>\n<p>Notes that I took while watching <a href=\"https://www.linkedin.com/learning/graphql-essential-training/data-persistence-with-sql\">Essentials of GraphQL</a></p>\n<h4><a href=\"./pages/NotADeveloper\">Not a Developer</a></h4>\n<p>A blog post about the imposter-syndrome I've encountered as I transition from Finance into Development</p>",
            "fields": {
              "slug": "/docs/"
            }
          }
        },
        {
          "node": {
            "id": "9a2ff305-6c45-540d-92ab-1eaf5f81a0ea",
            "timeToRead": 1,
            "headings": [
              {
                "value": "Keep it Simple"
              },
              {
                "value": "Clear the Workbook's Formatting"
              },
              {
                "value": "Convert Text to Hyperlinks"
              },
              {
                "value": "Paste Hyperlink Right"
              },
              {
                "value": "Tips or Suggestions?"
              }
            ],
            "html": "<h2>Keep it Simple</h2>\n<p>The collection of these three macros are kept in my Personal Macro Workbook, so they are available in every workbook that I open. That said, it's important to make sure that they are ambiguous in their references.</p>\n<p>To learn more about Personal Macro Workbooks, I suggest <a href=\"https://www.myonlinetraininghub.com/create-a-personal-macro-workbook-personal-xlsb\">this article</a> by Phillip Treacy.</p>\n<h2>Clear the Workbook's Formatting</h2>\n<p>I created this macro to deal with ugly spreadsheets. Merged cells, wrapped text, funky alignments - all GONE.</p>\n<div class=\"gatsby-highlight\" data-language=\"visual-basic\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-visual-basic line-numbers\"><code class=\"language-visual-basic\"><span class=\"token keyword\">Sub</span> QuickFormat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">'Clear Formatting from all cells</span>\n    <span class=\"token comment\">'ctrl+shift+m</span>\n    \n    Application<span class=\"token punctuation\">.</span>ScreenUpdating <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\n\n    <span class=\"token keyword\">With</span> ActiveSheet<span class=\"token punctuation\">.</span>Cells            <span class=\"token comment\">'Clear any cell formatting</span>\n        <span class=\"token punctuation\">.</span>HorizontalAlignment <span class=\"token operator\">=</span> xlLeft\n        <span class=\"token punctuation\">.</span>VerticalAlignment <span class=\"token operator\">=</span> xlBottom\n        <span class=\"token punctuation\">.</span>WrapText <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\n        <span class=\"token punctuation\">.</span>Orientation <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n        <span class=\"token punctuation\">.</span>AddIndent <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\n        <span class=\"token punctuation\">.</span>IndentLevel <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n        <span class=\"token punctuation\">.</span>ShrinkToFit <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\n        <span class=\"token punctuation\">.</span>ReadingOrder <span class=\"token operator\">=</span> xlContext\n        <span class=\"token punctuation\">.</span>MergeCells <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\n        <span class=\"token punctuation\">.</span>Columns<span class=\"token punctuation\">.</span>AutoFit\n    <span class=\"token keyword\">End</span> <span class=\"token keyword\">With</span>\n    <span class=\"token keyword\">With</span> ActiveSheet<span class=\"token punctuation\">.</span>Cells<span class=\"token punctuation\">.</span>Font        <span class=\"token comment\">'Clear any font formatting</span>\n        <span class=\"token punctuation\">.</span>Name <span class=\"token operator\">=</span> <span class=\"token string\">\"Calibri\"</span>\n        <span class=\"token punctuation\">.</span>Size <span class=\"token operator\">=</span> <span class=\"token number\">11</span>\n        <span class=\"token punctuation\">.</span>Strikethrough <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\n        <span class=\"token punctuation\">.</span>Superscript <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\n        <span class=\"token punctuation\">.</span>Subscript <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\n        <span class=\"token punctuation\">.</span>OutlineFont <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\n        <span class=\"token punctuation\">.</span>Shadow <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\n        <span class=\"token punctuation\">.</span>TintAndShade <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n        <span class=\"token punctuation\">.</span>ThemeFont <span class=\"token operator\">=</span> xlThemeFontMinor\n    <span class=\"token keyword\">End</span> <span class=\"token keyword\">With</span>\n    \n    Application<span class=\"token punctuation\">.</span>ScreenUpdating <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>\n\n<span class=\"token keyword\">End</span> <span class=\"token keyword\">Sub</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>Convert Text to Hyperlinks</h2>\n<p>This macro takes a cell with regular text and converts it to a clickable hyperlink (assuming a valid address).</p>\n<div class=\"gatsby-highlight\" data-language=\"visual-basic\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-visual-basic line-numbers\"><code class=\"language-visual-basic\"><span class=\"token keyword\">Sub</span> ConvertToHyperlink<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">'Keyboard Shortcut Ctrl + Shift + H</span>\n    \n    ActiveSheet<span class=\"token punctuation\">.</span>Hyperlinks<span class=\"token punctuation\">.</span>Add Anchor<span class=\"token punctuation\">:</span><span class=\"token operator\">=</span>Excel<span class=\"token punctuation\">.</span>Selection<span class=\"token punctuation\">,</span> Address<span class=\"token punctuation\">:</span><span class=\"token operator\">=</span> <span class=\"token operator\">_</span>\n        ActiveCell<span class=\"token punctuation\">.</span>Value<span class=\"token punctuation\">,</span> TextToDisplay<span class=\"token punctuation\">:</span><span class=\"token operator\">=</span>ActiveCell<span class=\"token punctuation\">.</span>Value\n        \n<span class=\"token keyword\">End</span> <span class=\"token keyword\">Sub</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h1>Paste Hyperlink Right</h1>\n<p>This is the newest addition to my macro workbook, and I have to admit, it may be my favorite one. Paired with the Quick Format macro above, you can easily paste an html page into Excel, have it formatted and strip the links in seconds.</p>\n<div class=\"gatsby-highlight\" data-language=\"visual-basic\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-visual-basic line-numbers\"><code class=\"language-visual-basic\"><span class=\"token keyword\">Sub</span> PasteLinkRight<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">' This macro works as if you used ctrl + r</span>\n    <span class=\"token comment\">' Except it strips the hyperlink and pastes as text</span>\n    <span class=\"token comment\">' Ctrl + Shift + R</span>\n\n    <span class=\"token keyword\">Dim</span> Lnk <span class=\"token keyword\">As</span> <span class=\"token keyword\">String</span>\n    Lnk <span class=\"token operator\">=</span> ActiveCell<span class=\"token punctuation\">.</span>Offset<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>Hyperlinks<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>Address\n\n    <span class=\"token keyword\">With</span> ActiveCell\n        <span class=\"token punctuation\">.</span>Activate\n        <span class=\"token punctuation\">.</span>Value <span class=\"token operator\">=</span> Lnk\n        <span class=\"token punctuation\">.</span>Offset<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>Hyperlinks<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>Delete\n    <span class=\"token keyword\">End</span> <span class=\"token keyword\">With</span>\n<span class=\"token keyword\">End</span> <span class=\"token keyword\">Sub</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3>Tips or Suggestions?</h3>\n<p>Send me an <a href=\"Mailto:prp1277@gmail.com\">email</a> with your thoughts! </p>",
            "fields": {
              "slug": "/docs/pages/FavoriteMacros/"
            }
          }
        },
        {
          "node": {
            "id": "2cef5be3-542d-593a-9680-8113059c8924",
            "timeToRead": 1,
            "headings": [
              {
                "value": "Structure Directory"
              },
              {
                "value": "JS Landing Page Templates like "
              },
              {
                "value": "Lighthouse Audit"
              },
              {
                "value": "Manifest, Site-Map"
              },
              {
                "value": "ImageSharp Caching"
              },
              {
                "value": "Identify which GraphQL query is the issue"
              }
            ],
            "html": "<h1>Structure Directory</h1>\n<h2>JS Landing Page Templates like <code class=\"language-text\">mdCompiler.js</code></h2>\n<h1>Lighthouse Audit</h1>\n<h2>Manifest, Site-Map</h2>\n<h1>ImageSharp Caching</h1>\n<h2>Identify which GraphQL query is the issue</h2>",
            "fields": {
              "slug": "/docs/pages/Checklist/"
            }
          }
        },
        {
          "node": {
            "id": "063f50f2-433b-5bff-ba8b-3b79ee0ae7e2",
            "timeToRead": 2,
            "headings": [
              {
                "value": "Problem: Using Parameters"
              }
            ],
            "html": "<blockquote>\n<p>This was originally posted to Reddit, I copied it here for convenience</p>\n</blockquote>\n<h2>Problem: Using Parameters</h2>\n<p>I have a workbook that is set up as an Excel Table as follows:</p>\n<center>\n<table>\n<thead>\n<tr>\n<th align=\"left\">Markdown Formula</th>\n<th align=\"center\">News</th>\n<th align=\"center\">URL</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">=\"[\"&#x26;A2&#x26;\"]\"&#x26;\"(\"&#x26;B2&#x26;\")\"</td>\n<td align=\"center\">All</td>\n<td align=\"center\"><a href=\"https://www.investing.com/rss/news.rss\">https://www.investing.com/rss/news.rss</a></td>\n</tr>\n<tr>\n<td align=\"left\">=\"[\"&#x26;A3&#x26;\"]\"&#x26;\"(\"&#x26;B3&#x26;\")\"</td>\n<td align=\"center\">Technology</td>\n<td align=\"center\"><a href=\"https://www.investing.com/rss/news_288.rss\">https://www.investing.com/rss/news_288.rss</a></td>\n</tr>\n<tr>\n<td align=\"left\">=\"[\"&#x26;A4&#x26;\"]\"&#x26;\"(\"&#x26;B4&#x26;\")\"</td>\n<td align=\"center\">Technology</td>\n<td align=\"center\"><a href=\"https://www.investing.com/rss/news_288.rss\">https://www.investing.com/rss/news_288.rss</a></td>\n</tr>\n</tbody>\n</table>\n</center><br/>\n<p>The markdown syntax column is there so I can create a links / cheat sheets page on Github that's similar to this <a href=\"https://github.com/axibase/open-data-catalog/tree/master/data-hosts\">Open Data Catalog Repository</a>, but I'd like the ability to refresh the queries and bring in the most recent news.</p>\n<p>I've read Ken Puls' <a href=\"https://www.excelguru.ca/blog/2014/11/26/building-a-parameter-table-for-power-query/\">blog post</a> where he creates the <code class=\"language-text\">fnGetParameters()</code> function and I think something like that might work if I added a <code class=\"language-text\">category</code> column and a few lines of VBA to refresh each category periodically:</p>\n<div class=\"gatsby-highlight\" data-language=\"visual-basic\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-visual-basic line-numbers\"><code class=\"language-visual-basic\"><span class=\"token comment\">'Attribute VB_Name = \"Module1\"</span>\n<span class=\"token keyword\">Dim</span> NextTick <span class=\"token keyword\">as</span> <span class=\"token keyword\">Date</span>\n<span class=\"token comment\">'------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">Sub</span> UpdateClock<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">'   Puts the current time in A1 and creates an event 30 mintes from now</span>\n    This<span class=\"token punctuation\">.</span>Workbook<span class=\"token punctuation\">.</span>Sheets<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>Range<span class=\"token punctuation\">(</span><span class=\"token string\">\"A1\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> Time\n    NextTick <span class=\"token operator\">=</span> Now <span class=\"token operator\">+</span> TimeValue<span class=\"token punctuation\">(</span><span class=\"token string\">\"00:30:00\"</span><span class=\"token punctuation\">)</span>\n    Application<span class=\"token punctuation\">.</span>OnTime NextTick<span class=\"token punctuation\">,</span> <span class=\"token string\">\"UpdateClock\"</span>\n<span class=\"token comment\">'   I would adjust the next line for each category</span>\n    ThisWorkbook<span class=\"token punctuation\">.</span>RefreshAll\n<span class=\"token keyword\">End</span> <span class=\"token keyword\">Sub</span>\n<span class=\"token comment\">'------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">Sub</span> StopClock<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">'   Cancel the future event</span>\n    <span class=\"token keyword\">On</span> <span class=\"token keyword\">Error</span> <span class=\"token keyword\">Resume</span> <span class=\"token keyword\">Next</span>\n    Application<span class=\"token punctuation\">.</span>OneTime NextTick<span class=\"token punctuation\">,</span> <span class=\"token string\">\"UpdateClock\"</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">FALSE</span>\n<span class=\"token keyword\">End</span> <span class=\"token keyword\">Sub</span>\n<span class=\"token comment\">'------------------------------------------------------------------------------</span>\n<span class=\"token comment\">'------------------------------------------------------------------------------</span>\n<span class=\"token comment\">'   Attribute VB_Name = \"ThisWorkbook\"</span>\n<span class=\"token comment\">'   Makes sure the workbook doesn't keep calculating</span>\n<span class=\"token keyword\">Private</span> <span class=\"token keyword\">Sub</span> Workbook_BeforeClose<span class=\"token punctuation\">(</span>Cancel <span class=\"token keyword\">as</span> <span class=\"token keyword\">Boolean</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">Call</span> StopClock\n<span class=\"token keyword\">End</span> <span class=\"token keyword\">Sub</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>I'm already using the VBA in a workbook that pulls data from Excel's new <code class=\"language-text\">Stocks</code> data-type API and it's <a href=\"https://www.youtube.com/watch?v=W_14DoSfGIM\">working wonderfully</a>, but I'd like to have the latest news as well as my account balances. The URLs in this case happen to be .rss files, but this could be applied to any interactions with APIs that have multiple endpoints.</p>\n<p>I'm open to any and all suggestions and am familiar enough to understand solutions in VBA, #M, JavaScript and R.</p>",
            "fields": {
              "slug": "/docs/pages/Get&Transform/"
            }
          }
        },
        {
          "node": {
            "id": "9aa1787f-7537-58b5-bb7c-de069c1d095d",
            "timeToRead": 1,
            "headings": [],
            "html": "",
            "fields": {
              "slug": "/docs/pages/LearnProgramming/"
            }
          }
        },
        {
          "node": {
            "id": "b94df237-f4e1-5374-832d-972afcf7495d",
            "timeToRead": 1,
            "headings": [
              {
                "value": "Stock Market Information"
              },
              {
                "value": "US Stocks"
              },
              {
                "value": "Weekly Earnings Announcements"
              }
            ],
            "html": "<h2>Stock Market Information</h2>\n<blockquote>\n<p>Widgets Powered by <a href=\"https://www.investing.com?utm_source=WMT&#x26;utm_medium=referral&#x26;utm_campaign=LEADING_STOCKS&#x26;utm_content=Footer%20Link\">Investing.com</a></p>\n</blockquote>\n<h2>US Stocks</h2>\n<iframe src=\"https://www.widgets.investing.com/leading-stocks?theme=darkTheme&roundedCorners=true&pairs=243,6435,6408,26490,8092,6497,13063,13994,277,8021,39291,244,40041,8192,7884,20846,32509,8164,20280,8256,8942,8263,39218,32524,29638,48361,7873,32507,39176,8221,8044,8288,8144,8182,8036,39173,8020,8060,39219,13833,7977,8078,8123,8350,8103,8303,32331,8080,992959,39263,8061,8282,8135,8097,7918,8320,8048,8352,7951,8067,13834,8077,13078,238,19693,8116,8248,8142,8081,7980,8047,8102,8016,8201,13835,7964,8250,13836,7874,22696,247,32525,7946,7965,8258,240,13837,8175,39264,7889,32521,241,941642,7933,271,7938,8313,8225,20683,7937,8297,8034,20624,264,41258,32337,8218,7876,7868,8054,13838,8931,7916,261,8944,8224,20486,8188,20744,7887,7858,7981,20923,8104,8342,13841,8126,8291,8339,7998,13794,273,7931,8015,41208,8007,8260,20488,7929,20717,13856,7949,39166,7888,13842,262,20230,8042,8231,13844,7866,32358,255,985775,39295,8167,8281,39162,7925,39135,7867,8193,263,239,7979,39277,266,8170,20931,13847,8270,7921,39179,8259,13846,8050,13849,8052,8326,959998,44408,8064,8272,13850,7927,8169,8082,7907,8026,7877,7915,8137,7930,13851,13852,8177,8071,267,8125,8176,8217,6463,32512,8334,10548,8105,269,8337,32518,8148,8062,8024,7909,8113,8023,7961,8131,7880,13083,10549,39251,8275,7862,32359,8945,8099,13947,8328,20299,8184,7864,7924,272,8014,7857,275,7947,20210,32321,20151,39172,8063,8946,8056,8278,276,13857,8134,8345,13855,8150,13091,7896,20769,8948,8245,8340,8252,7861,40082,8128,13858,7954,8129,274,8057,8118,8203,32533,8251,39262,7976,32370,8279,32396,7989,8039,32531,7943,13860,7912,7923,8952,7968,8191,7893,8158,8237,19695,8198,8022,8229,20380,7939,39285,9164,20718,7945,13862,21180,8207,8356,8168,13863,39254,8119,32515,8294,13864,8354,8076,8222,7986,39114,8210,8001,7956,7914,8160,7967,8186,7878,940815,8285,19701,8227,7959,8180,13843,8305,8299,6491,8159,8147,8315,8234,8151,20793,8179,8310,13959,976067,8083,13061,32535,8199,32516,8235,8359,39147,8174,7870,8241,8153,13866,8127,8318,7863,7974,13867,8030,7997,258,8058,7881,7992,13848,955555,8323,8953,8228,8122,8239,7886,8003,32532,8327,7902,41176,9019,8274,15424,39320,6464,6373,6460,13810,15368,6369,100160,44412,6466,7869,6386,6363,6378,6487,15579,13072,1031336,13969,6514,39325,6426,13080,7906,6388,6504,13068,15722,6444,6507,6360,260,6421,6454,6516,6443,6451,6364,6411,6382,15915,14776,6441,6472,13067,6449,6468,6367,13763,8934,6409,6358,6370,7216,6442,6365,8351,6405,6515,6493,16336,102907,13981,13081,16360,251,6448,6393,13082,102911,6462,270,39152,6445,6371,16491,8136,7917,13084,16599,6391,252,32372,6355,13570,6395,101919,6440,6439,13065,13795,6419,13074,6430,6477,956170,6406,32373,8358,8267,945074,6376,6489,32391,6437,39107,8940,17171,6427,32378,6500,6499,6494,39335,6480,19694,13995,8268,265,32379,32539,23180,39338,6407,39340,6353,8171,22196,8355,8117,29740,32361,6392,7875,6467,6418,256\" \nwidth=\"100%\" \nheight=\"600\" \nframeborder=\"0\" \nallowtransparency=\"true\" \nmarginwidth=\"0\" \nmarginheight=\"0\"></iframe>\n<h2>Weekly Earnings Announcements</h2>\n<iframe \nsrc=\"https://sslearnings.forexprostools.com?ecoDayBackground=%230d0d0d&defaultFont=%23000000&borderColor=%23000000&columns=symbols,exc_actual,exc_forecast,companyname&category=1,2,3,4,5,6,7,8,9,10,11,12&features=datepicker,timeselector&countries=5&calType=day&lang=1\" \nwidth=\"100%\" \nheight=\"600\" \nframeborder=\"0\" \nallowtransparency=\"true\" \nmarginwidth=\"0\" \nmarginheight=\"0\">\n</iframe>",
            "fields": {
              "slug": "/docs/pages/FinanceWidgets/"
            }
          }
        },
        {
          "node": {
            "id": "3fec39a8-c174-5111-83fe-f19f178c0b45",
            "timeToRead": 1,
            "headings": [
              {
                "value": "MdCompiler"
              },
              {
                "value": "my-files"
              },
              {
                "value": "MyImgs"
              },
              {
                "value": "AllFiles Query"
              },
              {
                "value": "Page Links"
              },
              {
                "value": "PathTable"
              },
              {
                "value": "Paginate"
              }
            ],
            "html": "<p>To avoid redundant queries that slow down the site paste GraphQL queries here.</p>\n<h1>MdCompiler</h1>\n<p><code class=\"language-text\">src/templates/mdCompiler.js</code></p>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-graphql line-numbers\"><code class=\"language-graphql\"><span class=\"token keyword\">query</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$slug</span><span class=\"token punctuation\">:</span> String<span class=\"token operator\">!</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    markdownRemark<span class=\"token punctuation\">(</span><span class=\"token attr-name\">fields</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token attr-name\">slug</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token attr-name\">eq</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">$slug</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      html\n      frontmatter <span class=\"token punctuation\">{</span>\n        title\n        date\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h1>my-files</h1>\n<p><code class=\"language-text\">src/pages/my-files.jsx</code></p>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-graphql line-numbers\"><code class=\"language-graphql\"><span class=\"token keyword\">query</span> PathQuery <span class=\"token punctuation\">{</span>\n    allFile <span class=\"token punctuation\">{</span>\n      edges <span class=\"token punctuation\">{</span>\n        node <span class=\"token punctuation\">{</span>\n          sourceInstanceName\n          relativePath\n          publicURL\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    allImageSharp <span class=\"token punctuation\">{</span>\n      edges <span class=\"token punctuation\">{</span>\n        node <span class=\"token punctuation\">{</span>\n          original <span class=\"token punctuation\">{</span>\n            src\n          <span class=\"token punctuation\">}</span>\n          sizes <span class=\"token punctuation\">{</span>\n            originalName\n            sizes\n            aspectRatio\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h1>MyImgs</h1>\n<p><code class=\"language-text\">src/pages/MyImgs.js</code></p>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-graphql line-numbers\"><code class=\"language-graphql\"><span class=\"token keyword\">query</span> MyImagesQuery <span class=\"token punctuation\">{</span>\n    allImageSharp <span class=\"token punctuation\">{</span>\n      edges <span class=\"token punctuation\">{</span>\n        node <span class=\"token punctuation\">{</span>\n          id\n          original <span class=\"token punctuation\">{</span>\n            src\n          <span class=\"token punctuation\">}</span>\n          fluid <span class=\"token punctuation\">{</span>\n            srcWebp\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h1>AllFiles Query</h1>\n<p><code class=\"language-text\">src/data/AllFiles.jsx</code></p>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-graphql line-numbers\"><code class=\"language-graphql\"><span class=\"token keyword\">query</span> AllFiles <span class=\"token punctuation\">{</span>\n      allFile <span class=\"token punctuation\">{</span>\n        edges <span class=\"token punctuation\">{</span>\n          node <span class=\"token punctuation\">{</span>\n            name\n            relativePath\n            publicURL\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h1>Page Links</h1>\n<p><code class=\"language-text\">src/data/PageLinks.jsx</code></p>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-graphql line-numbers\"><code class=\"language-graphql\"><span class=\"token keyword\">query</span> <span class=\"token punctuation\">{</span>\n        allMarkdownRemark <span class=\"token punctuation\">{</span>\n          edges <span class=\"token punctuation\">{</span>\n            node <span class=\"token punctuation\">{</span>\n              id\n              frontmatter <span class=\"token punctuation\">{</span>\n                title\n              <span class=\"token punctuation\">}</span>\n              fields <span class=\"token punctuation\">{</span>\n                slug\n              <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h1>PathTable</h1>\n<p><code class=\"language-text\">src/data/PathTable.jsx</code></p>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-graphql line-numbers\"><code class=\"language-graphql\"><span class=\"token keyword\">query</span> MasterData <span class=\"token punctuation\">{</span>\n      allFile<span class=\"token punctuation\">(</span><span class=\"token attr-name\">sort</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token attr-name\">fields</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">[</span>relativeDirectory<span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        edges <span class=\"token punctuation\">{</span>\n        node <span class=\"token punctuation\">{</span>\n          name\n          sourceInstanceName\n          relativeDirectory\n          relativePath\n          publicURL\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h1>Paginate</h1>\n<p><code class=\"language-text\">src/components/paginate.jsx</code></p>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-graphql line-numbers\"><code class=\"language-graphql\"><span class=\"token keyword\">query</span> Paginate <span class=\"token punctuation\">{</span>\n  allSitePage <span class=\"token punctuation\">{</span>\n    edges <span class=\"token punctuation\">{</span>\n      node <span class=\"token punctuation\">{</span>\n        id\n        path\n      <span class=\"token punctuation\">}</span>\n      next <span class=\"token punctuation\">{</span>\n        path\n      <span class=\"token punctuation\">}</span>\n      previous <span class=\"token punctuation\">{</span>\n        path\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>",
            "fields": {
              "slug": "/docs/pages/GraphQLQueries/"
            }
          }
        },
        {
          "node": {
            "id": "805f95a5-f00e-583c-a6bb-83c908c926e3",
            "timeToRead": 4,
            "headings": [
              {
                "value": "Set-Up a New Node.js Server"
              },
              {
                "value": "Install Dependencies and Set-Up the Environment"
              },
              {
                "value": "Creating a Schema - schema.js"
              },
              {
                "value": "Updating index.js"
              },
              {
                "value": "Install Additional Dependencies"
              },
              {
                "value": "Next Time: Integrating MongoDB and SQLite"
              },
              {
                "value": "Questions? Comments? Send me an "
              }
            ],
            "html": "<blockquote>\n<p>This assumes there is already a directory set up, but that's about it.\n<a href=\"https://1drv.ms/f/s!AoLkNBOSNnKyjaMLfS0m6_fLIEhk_A\">Example Files</a></p>\n</blockquote>\n<p>These are my notes from the LinkedIn Learning tutorial <a href=\"https://www.linkedin.com/learning/graphql-essential-training/data-persistence-with-sql\"><em>GraphQL Essential Training</em></a>. The handwritten versions can be found at the following links:</p>\n<h2>Set-Up a New Node.js Server</h2>\n<p>Make sure you are in the root directory of your project by typing <code class=\"language-text\">ls</code> into your integrated terminal. After that is confirmed, run <code class=\"language-text\">npm init</code> to initiate a node.js project with a package.json. This will walk you through the process as follows:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\">prp1277@home MINGW64 ~/GitHub-Repos/src-job-land\n$ <span class=\"token function\">npm</span> init\nThis utility will walk you through creating a package.json file.\nIt only covers the <span class=\"token function\">most</span> common items, and tries to guess sensible defaults.\n\nSee <span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">npm</span> <span class=\"token function\">help</span> json<span class=\"token variable\">`</span></span> <span class=\"token keyword\">for</span> definitive documentation on these fields\nand exactly what they do.\n\nUse <span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">npm</span> <span class=\"token function\">install</span> <span class=\"token operator\">&lt;</span>pkg<span class=\"token operator\">></span><span class=\"token variable\">`</span></span> afterwards to <span class=\"token function\">install</span> a package and\nsave it as a dependency <span class=\"token keyword\">in</span> the package.json file.\n\nPress ^C at any <span class=\"token function\">time</span> to quit.\npackage name: <span class=\"token punctuation\">(</span>src-job-land<span class=\"token punctuation\">)</span>\nversion: <span class=\"token punctuation\">(</span>1.0.0<span class=\"token punctuation\">)</span>\ndescription: Job Land\nentry point: <span class=\"token punctuation\">(</span>index.js<span class=\"token punctuation\">)</span>\n<span class=\"token function\">test</span> command:\n<span class=\"token function\">git</span> repository:\nkeywords:\nauthor: Patrick Powell\nlicense: <span class=\"token punctuation\">(</span>ISC<span class=\"token punctuation\">)</span>\nAbout to <span class=\"token function\">write</span> to C:\\\\GitHub-Repos\\src-job-land\\package.json:\n\n<span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"name\"</span><span class=\"token keyword\">:</span> <span class=\"token string\">\"src-job-land\"</span>,\n  <span class=\"token string\">\"version\"</span><span class=\"token keyword\">:</span> <span class=\"token string\">\"1.0.0\"</span>,\n  <span class=\"token string\">\"description\"</span><span class=\"token keyword\">:</span> <span class=\"token string\">\"Job Land\"</span>,\n  <span class=\"token string\">\"main\"</span><span class=\"token keyword\">:</span> <span class=\"token string\">\"index.js\"</span>,\n  <span class=\"token string\">\"scripts\"</span><span class=\"token keyword\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"test\"</span><span class=\"token keyword\">:</span> <span class=\"token string\">\"echo \\\"Error: no test specified\\\" &amp;&amp; exit 1\"</span>\n  <span class=\"token punctuation\">}</span>,\n  <span class=\"token string\">\"author\"</span><span class=\"token keyword\">:</span> <span class=\"token string\">\"Patrick Powell\"</span>,\n  <span class=\"token string\">\"license\"</span><span class=\"token keyword\">:</span> <span class=\"token string\">\"ISC\"</span>\n<span class=\"token punctuation\">}</span>\n\nIs this ok? <span class=\"token punctuation\">(</span>yes<span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<br />\n<h2>Install Dependencies and Set-Up the Environment</h2>\n<p>First, install the dev dependencies:\n<code class=\"language-text\">npm install --save-dev babel-cli- babel-preset-env babel-preset-stage-0</code></p>\n<p>then we'll install the project dependencies:\n<code class=\"language-text\">npm install --save express nodemon</code></p>\n<p>Now we have a package.json, package-lock.json and the node_modules directory along with our other project files. We will still need to add a few things before we are able to do anything with our project. We'll start by adding a file called <code class=\"language-text\">.babelrc</code> in the root directory of the project. Once that is added, open the file and paste the following:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-json line-numbers\"><code class=\"language-json\">/*  './root/.babelrc' */\n<span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"presets\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"env\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"stage-0\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<br/>\n<h2>Creating a Schema - schema.js</h2>\n<p>We are getting closer to starting our server, but first we have to create one more file and make some updates to our index.js. If you haven't already, add a folder named <code class=\"language-text\">data</code> in your root directory. Once you have <code class=\"language-text\">./root/data/</code> add a file named <code class=\"language-text\">schema.js</code>. This will tell GraphQL and MongoDB the structure and types of our data.</p>\n<p>In <code class=\"language-text\">./root/data/schema.js</code> add:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> buildSchema <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"graphql\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/*\n In this case, we are building 3 types: Friend, Email and Query\n and adding details about the corresponding data types \n*/</span>\n\n<span class=\"token keyword\">const</span> schema <span class=\"token operator\">=</span> <span class=\"token function\">buildSchema</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`\n    type Friend {\n        id: ID\n        firstName: String\n        lastName: String\n        gender: String\n        language: String\n        email: String\n    }\n\n    type Query {\n        friend: Friend\n    }\n\n    input FriendInput {\n        id: ID\n        firstName: String!\n        lastName: String\n        gender: String\n        language: String\n        email: String\n    }\n\n    type Mutation {\n        createFriend(input: FriendInput): Friend\n    }\n`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> schema<span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<br />\n<h2>Updating index.js</h2>\n<p>Next, we need to add an entry point for the server. When we set up our package.json we specified that the entry point will be index.js, so open or create <strong>index.js</strong> and add the following:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">import</span> express <span class=\"token keyword\">from</span> <span class=\"token string\">\"express\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> graphqlHTTP <span class=\"token keyword\">from</span> <span class=\"token string\">\"express-graphql\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> schema <span class=\"token keyword\">from</span> <span class=\"token string\">\"./schema\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token function\">express</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  res<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"GraphQL is amazing!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Friend</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> firstName<span class=\"token punctuation\">,</span> lastName<span class=\"token punctuation\">,</span> gender<span class=\"token punctuation\">,</span> language<span class=\"token punctuation\">,</span> email <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>id <span class=\"token operator\">=</span> id<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>firstName <span class=\"token operator\">=</span> firstName<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>lastName <span class=\"token operator\">=</span> lastName<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>gender <span class=\"token operator\">=</span> gender<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>language <span class=\"token operator\">=</span> language<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>email <span class=\"token operator\">=</span> email<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> friendDatabase <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> root <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  friend<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      id<span class=\"token punctuation\">:</span> <span class=\"token number\">1277</span><span class=\"token punctuation\">,</span>\n      firstName<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Patrick\"</span><span class=\"token punctuation\">,</span>\n      lastName<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Powell\"</span><span class=\"token punctuation\">,</span>\n      gender<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Male\"</span><span class=\"token punctuation\">,</span>\n      language<span class=\"token punctuation\">:</span> <span class=\"token string\">\"English\"</span><span class=\"token punctuation\">,</span>\n      emails<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span> email<span class=\"token punctuation\">:</span> <span class=\"token string\">\"me@me.com\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> email<span class=\"token punctuation\">:</span> <span class=\"token string\">\"another@me.com\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  createFriend<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> input <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> id <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"crypto\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">randomBytes</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hex\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    friendDatabase<span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> input<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Friend</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span> input<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>\n  <span class=\"token string\">\"/graphql\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">graphqlHTTP</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    schema<span class=\"token punctuation\">:</span> schema<span class=\"token punctuation\">,</span>\n    rootValue<span class=\"token punctuation\">:</span> root<span class=\"token punctuation\">,</span>\n    graphiql<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token number\">8080</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Running server on port localhost:8080/graphql\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<br />\n<h2>Install Additional Dependencies</h2>\n<p>So at this point, we've build a schema and told GraphQL where the entry point is... but we still haven't installed GraphQL. Open your terminal again and type:</p>\n<p><code class=\"language-text\">npm install --save express-graphql graphql</code></p>\n<blockquote>\n<p>One thing to point out - make sure the project's directory is not named \"graphql\" or you'll have issues.</p>\n</blockquote>\n<p>Make sure all your files are saved and start the server using <code class=\"language-text\">npm start</code> and browse to <a href=\"http://localhost:8080/graphql\">localhost:8080/graphql</a>, where you'll find an instance of GraphiQL. The queries available at this point of the tutorial are limited, but since there is quite a bit left to do, I'm going to leave that for another post.</p>\n<h3>Next Time: Integrating MongoDB and SQLite<br/></h3>\n<h4>Questions? Comments? Send me an <a href=\"mailto:prp1277@gmail.com\">email</a> and let me know what you think!</h4>",
            "fields": {
              "slug": "/docs/pages/LyndaGQL/"
            }
          }
        },
        {
          "node": {
            "id": "07a5bb16-f7f0-56df-a5e9-99572f168648",
            "timeToRead": 2,
            "headings": [
              {
                "value": "I Am Not a Developer"
              },
              {
                "value": "My Introduction to Programming"
              },
              {
                "value": "After 3 interviews and 2 bachelor parties I found myself working in the Foodservice Industry."
              }
            ],
            "html": "<h1>I Am Not a Developer</h1>\n<p>My background is in Finance and Accounting. I majored in Finance and minored in Accounting in college and started working in the financial services industry soon after. As you may imagine, this requires an in-depth understanding of financial equations, concepts and, of course, Microsoft Excel.</p>\n<p>Although most people loath spreadsheets, I found solace in them. The days of calculating the time value of money using my <a href=\"https://sep.yimg.com/ay/pospaper-store/baiiplus-financial-calculator-10-digit-lcd-12.jpg\">BA-II Plus</a> went out the window as soon as left academia. Of course, we had been assigned Excel projects in a few of my classes, but most the projects had a limited scope such as: <code class=\"language-text\">&quot;Create an Income Statement, Balance Sheet and Cash Flow Statement given these criteria...&quot;</code>. This was great to drive home the concepts that we were learning in class, but didn't do a great job to prepare us for <em>real</em> finance.</p>\n<h2>My Introduction to Programming</h2>\n<p>It wasn't until I was a full year out of college that I started using Excel extensively. After graduating I had accepted a role as a Customer Service Representative in the Call Center of a mutual fund company and focused on soft-skills more than knowledge of financial calculations. It wasn't until I got fired from the call center and started working as a Mutual Fund Accountant that I realized the full reach of Microsoft's signature spreadsheet program.</p>\n<p>The bank that I was working for is responsible for \"over 10% of the world's assets\", and relies on Microsoft's full software stack to service these assets. Excel files, OneNote documentation and Access databases were the sparks that ignited my interest in programming. Most of my day-to-day time was spent running Excel macros that someone else had written and I had no idea how to debug. All I knew was that Files X, Y and Z had to be saved with a certain name in a certain directory as documented by the OneNote, otherwise...</p>\n<img style=\"min-height: 375px; max-width: 100%;\" alt=\"\" src=\"https://i.imgur.com/wWdmqMj.png\" original-title=\"\">\n<p>Over the period of my 6-month contract I identified the reliance on our VBA specialist, Luke, and made it my goal to start understanding some of the code behind the macros I ran each day. I had grown accustomed to using OneNote for documentation and started my own notebook at home to help me learn. I started with keyboard shortcuts, tables of functions and links to forums with plans to basically create a documentation database.</p>\n<p>As my notebook grew my skills followed and about 5 months into my contract I heard of an open position as a Purchasing Assistant at a foodservice company and sent in my application.</p>\n<h3>After 3 interviews and 2 bachelor parties I found myself working in the Foodservice Industry.</h3>\n<p>As the first Purchasing Assistant the division had ever hired, I was tasked with providing analysis and supporting documentation as well as purchasing my own line of food.</p>",
            "fields": {
              "slug": "/docs/pages/NotADeveloper/"
            }
          }
        },
        {
          "node": {
            "id": "cfee8786-aea8-5f11-a69d-be40b33f5b31",
            "timeToRead": 2,
            "headings": [
              {
                "value": "Reinhart Foodservice"
              },
              {
                "value": "State Street"
              },
              {
                "value": "Waddell & Reed"
              },
              {
                "value": "Key Bank Real Estate Capital"
              },
              {
                "value": "Education"
              },
              {
                "value": "Rockhurst University"
              },
              {
                "value": "Missouri State University"
              }
            ],
            "html": "<h4><b>A financial analyst with a background in operations and a passion for improving processes.</b></h4>\n<h2>\n<a href=\"Mailto:Prp1277@gmail.com\">Email</a> --\n<a href=\"tel:+1-402-415-9083\">Cell</a> --\n<a href=\"https://linkedin.com/in/prpowell1277\">LinkedIn</a> --\n<a href=\"https://github.com/prp1277\">GitHub</a> --\n<a href=\"https://www.google.com/maps/place/7929+Summit+St,+Kansas+City,+MO+64114\">Address</a>\n</h2>\n<h1>Employment</h1>\n<h3>Reinhart Foodservice</h3>\n<blockquote>\n<p>Purchasing Assistant (August 2017 - February 2018)</p>\n</blockquote>\n<p>Built, managed and maintained Excel and Power Bi dashboards for inventory valuation to provide insights to management</p>\n<p>Created dynamic Excel templates using VBA and Power Queries to optimize Procurement, Warehousing and Transportation</p>\n<p>Took ownership of the weekly Perfect Order Reports and meetings to trace and eliminate invoice errors</p>\n<blockquote>\n<p>Decreased invoice errors due to product availability by 34%</p>\n</blockquote>\n<p>Purchased 221 Products from 22 vendors, managed inventory levels and communications between vendors, a centralized repurchasing team, sales representatives and customers</p>\n<h2>State Street</h2>\n<p><strong>Client Operations - Associate II - Consultant</strong> (February 2017 - August 2017)</p>\n<ul>\n<li>Participated in a daily work-flow to maintain the general ledger for a family of mutual funds</li>\n<li>Documented procedures for processing transactions, journal entries and validating data between sources</li>\n<li>Collaborated with a team of remote workers to ensure the client's continual support</li>\n<li>Consolidated information from various sources including Bloomberg Terminals, Multi-Currency Horizon and web-scrapes to reconcile daily Net Asset Value with DST's Vision software</li>\n<li>Ran macros to eliminate human error and improve efficiency</li>\n</ul>\n<h2>Waddell &#x26; Reed</h2>\n<p><strong>Customer Service Representative</strong> (February 2016 - October 2016)</p>\n<ul>\n<li>Received telephone inquiries and provided support to shareholders and financial advisors</li>\n<li>Used DST's TA2000 and AWD software to maintain shareholder information and records</li>\n</ul>\n<h2>Key Bank Real Estate Capital</h2>\n<p><strong>Loan Surveillance &#x26; Asset Management, Surveillance Internship</strong> (Summer 2015)</p>\n<ul>\n<li>Monitored loans serviced by Key Bank to ensure future cash flow and minimize credit risk</li>\n<li>Analyzed Operating Statements and Rent Rolls, noted changes in income, expenses, occupancy and client defaults and reported significant changes to management</li>\n<li>Researched and presented growth opportunities to the divisions managing directors</li>\n</ul>\n<h1>Education</h1>\n<h2>Rockhurst University</h2>\n<p><strong>Certificate, Data Science</strong>\nExpected 2019</p>\n<h2>Missouri State University</h2>\n<p><strong>B.S. Finance, Accounting Minor</strong>\nFall 2015 - 3.21 GPA</p>",
            "fields": {
              "slug": "/docs/pages/resume/"
            }
          }
        },
        {
          "node": {
            "id": "73efc28e-abee-5f62-bbfa-dbd8c644d8af",
            "timeToRead": 2,
            "headings": [
              {
                "value": "Borrowed from \"Advanced-Gatsby-Starter\""
              }
            ],
            "html": "<blockquote>\n<p><a href=\"https://raw.githubusercontent.com/Vagr9K/gatsby-advanced-starter/master/gatsby-node.js\">Source</a></p>\n</blockquote>\n<h1>Borrowed from \"Advanced-Gatsby-Starter\"</h1>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"path\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> _ <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"lodash\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> moment <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"moment\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> siteConfig <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./data/SiteConfig\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> postNodes <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// postNodes = ARRAY </span>\n                      <span class=\"token comment\">// used as \"postNodes.push(node);\" in createNodeField</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">addSiblingNodes</span><span class=\"token punctuation\">(</span>createNodeField<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  postNodes<span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> frontmatter<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> date<span class=\"token punctuation\">:</span> date1 <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> frontmatter<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> date<span class=\"token punctuation\">:</span> date2 <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> dateA <span class=\"token operator\">=</span> <span class=\"token function\">moment</span><span class=\"token punctuation\">(</span>date1<span class=\"token punctuation\">,</span> siteConfig<span class=\"token punctuation\">.</span>dateFromFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> dateB <span class=\"token operator\">=</span> <span class=\"token function\">moment</span><span class=\"token punctuation\">(</span>date2<span class=\"token punctuation\">,</span> siteConfig<span class=\"token punctuation\">.</span>dateFromFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>dateA<span class=\"token punctuation\">.</span><span class=\"token function\">isBefore</span><span class=\"token punctuation\">(</span>dateB<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>dateB<span class=\"token punctuation\">.</span><span class=\"token function\">isBefore</span><span class=\"token punctuation\">(</span>dateA<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//End postNodes.sort()</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> postNodes<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i <span class=\"token operator\">+=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> nextID <span class=\"token operator\">=</span> i <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token operator\">&lt;</span> postNodes<span class=\"token punctuation\">.</span>length <span class=\"token operator\">?</span> i <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> prevID <span class=\"token operator\">=</span> i <span class=\"token operator\">-</span> <span class=\"token number\">1</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> i <span class=\"token operator\">-</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">:</span> postNodes<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> currNode <span class=\"token operator\">=</span> postNodes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> nextNode <span class=\"token operator\">=</span> postNodes<span class=\"token punctuation\">[</span>nextID<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> prevNode <span class=\"token operator\">=</span> postNodes<span class=\"token punctuation\">[</span>prevID<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">createNodeField</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      node<span class=\"token punctuation\">:</span> currNode<span class=\"token punctuation\">,</span>\n      name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"nextTitle\"</span><span class=\"token punctuation\">,</span>\n      value<span class=\"token punctuation\">:</span> nextNode<span class=\"token punctuation\">.</span>frontmatter<span class=\"token punctuation\">.</span>title\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">createNodeField</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      node<span class=\"token punctuation\">:</span> currNode<span class=\"token punctuation\">,</span>\n      name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"nextSlug\"</span><span class=\"token punctuation\">,</span>\n      value<span class=\"token punctuation\">:</span> nextNode<span class=\"token punctuation\">.</span>fields<span class=\"token punctuation\">.</span>slug\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">createNodeField</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      node<span class=\"token punctuation\">:</span> currNode<span class=\"token punctuation\">,</span>\n      name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"prevTitle\"</span><span class=\"token punctuation\">,</span>\n      value<span class=\"token punctuation\">:</span> prevNode<span class=\"token punctuation\">.</span>frontmatter<span class=\"token punctuation\">.</span>title\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">createNodeField</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      node<span class=\"token punctuation\">:</span> currNode<span class=\"token punctuation\">,</span>\n      name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"prevSlug\"</span><span class=\"token punctuation\">,</span>\n      value<span class=\"token punctuation\">:</span> prevNode<span class=\"token punctuation\">.</span>fields<span class=\"token punctuation\">.</span>slug\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nexports<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onCreateNode</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> node<span class=\"token punctuation\">,</span> actions<span class=\"token punctuation\">,</span> getNode <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> createNodeField <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> actions<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> slug<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>internal<span class=\"token punctuation\">.</span>type <span class=\"token operator\">===</span> <span class=\"token string\">\"MarkdownRemark\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> fileNode <span class=\"token operator\">=</span> <span class=\"token function\">getNode</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>parent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> parsedFilePath <span class=\"token operator\">=</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>fileNode<span class=\"token punctuation\">.</span>relativePath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>\n      Object<span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>hasOwnProperty<span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">,</span> <span class=\"token string\">\"frontmatter\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span>\n      Object<span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>hasOwnProperty<span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>frontmatter<span class=\"token punctuation\">,</span> <span class=\"token string\">\"title\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      slug <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token string\">`/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">kebabCase</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>frontmatter<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>parsedFilePath<span class=\"token punctuation\">.</span>name <span class=\"token operator\">!==</span> <span class=\"token string\">\"index\"</span> <span class=\"token operator\">&amp;&amp;</span> parsedFilePath<span class=\"token punctuation\">.</span>dir <span class=\"token operator\">!==</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      slug <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token string\">`/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>parsedFilePath<span class=\"token punctuation\">.</span>dir<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>parsedFilePath<span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/`</span></span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>parsedFilePath<span class=\"token punctuation\">.</span>dir <span class=\"token operator\">===</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      slug <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token string\">`/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>parsedFilePath<span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/`</span></span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      slug <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token string\">`/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>parsedFilePath<span class=\"token punctuation\">.</span>dir<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/`</span></span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Object<span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>hasOwnProperty<span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">,</span> <span class=\"token string\">\"frontmatter\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Object<span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>hasOwnProperty<span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>frontmatter<span class=\"token punctuation\">,</span> <span class=\"token string\">\"slug\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        slug <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token string\">`/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">kebabCase</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>frontmatter<span class=\"token punctuation\">.</span>slug<span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Object<span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>hasOwnProperty<span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>frontmatter<span class=\"token punctuation\">,</span> <span class=\"token string\">\"date\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> date <span class=\"token operator\">=</span> <span class=\"token function\">moment</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>frontmatter<span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">,</span> siteConfig<span class=\"token punctuation\">.</span>dateFromFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>date<span class=\"token punctuation\">.</span>isValid<span class=\"token punctuation\">)</span>\n          console<span class=\"token punctuation\">.</span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`WARNING: Invalid date.`</span></span><span class=\"token punctuation\">,</span> node<span class=\"token punctuation\">.</span>frontmatter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token function\">createNodeField</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n          node<span class=\"token punctuation\">,</span>\n          name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"date\"</span><span class=\"token punctuation\">,</span>\n          value<span class=\"token punctuation\">:</span> date<span class=\"token punctuation\">.</span><span class=\"token function\">toISOString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">createNodeField</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> node<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"slug\"</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">:</span> slug <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    postNodes<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nexports<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">setFieldsOnGraphQLNodeType</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> type<span class=\"token punctuation\">,</span> actions <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> name <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> type<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> createNodeField <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> actions<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>name <span class=\"token operator\">===</span> <span class=\"token string\">\"MarkdownRemark\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">addSiblingNodes</span><span class=\"token punctuation\">(</span>createNodeField<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nexports<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">createPages</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> graphql<span class=\"token punctuation\">,</span> actions <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> createPage <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> actions<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>resolve<span class=\"token punctuation\">,</span> reject<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> postPage <span class=\"token operator\">=</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"src/templates/post.jsx\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> tagPage <span class=\"token operator\">=</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"src/templates/tag.jsx\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> categoryPage <span class=\"token operator\">=</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"src/templates/category.jsx\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>\n      <span class=\"token function\">graphql</span><span class=\"token punctuation\">(</span>\n        <span class=\"token template-string\"><span class=\"token string\">`\n          {\n            allMarkdownRemark {\n              edges {\n                node {\n                  frontmatter {\n                    tags\n                    category\n                  }\n                  fields {\n                    slug\n                  }\n                }\n              }\n            }\n          }\n        `</span></span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>result <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>errors<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token comment\">/* eslint no-console: \"off\" */</span>\n          console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>errors<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token function\">reject</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>errors<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">const</span> tagSet <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">const</span> categorySet <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        result<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>allMarkdownRemark<span class=\"token punctuation\">.</span>edges<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>edge <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>edge<span class=\"token punctuation\">.</span>node<span class=\"token punctuation\">.</span>frontmatter<span class=\"token punctuation\">.</span>tags<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            edge<span class=\"token punctuation\">.</span>node<span class=\"token punctuation\">.</span>frontmatter<span class=\"token punctuation\">.</span>tags<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>tag <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n              tagSet<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>tag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span>\n\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>edge<span class=\"token punctuation\">.</span>node<span class=\"token punctuation\">.</span>frontmatter<span class=\"token punctuation\">.</span>category<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            categorySet<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>edge<span class=\"token punctuation\">.</span>node<span class=\"token punctuation\">.</span>frontmatter<span class=\"token punctuation\">.</span>category<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span>\n\n          <span class=\"token function\">createPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n            path<span class=\"token punctuation\">:</span> edge<span class=\"token punctuation\">.</span>node<span class=\"token punctuation\">.</span>fields<span class=\"token punctuation\">.</span>slug<span class=\"token punctuation\">,</span>\n            component<span class=\"token punctuation\">:</span> postPage<span class=\"token punctuation\">,</span>\n            context<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n              slug<span class=\"token punctuation\">:</span> edge<span class=\"token punctuation\">.</span>node<span class=\"token punctuation\">.</span>fields<span class=\"token punctuation\">.</span>slug\n            <span class=\"token punctuation\">}</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">const</span> tagList <span class=\"token operator\">=</span> Array<span class=\"token punctuation\">.</span><span class=\"token keyword\">from</span><span class=\"token punctuation\">(</span>tagSet<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        tagList<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>tag <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n          <span class=\"token function\">createPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n            path<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`/tags/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">kebabCase</span><span class=\"token punctuation\">(</span>tag<span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/`</span></span><span class=\"token punctuation\">,</span>\n            component<span class=\"token punctuation\">:</span> tagPage<span class=\"token punctuation\">,</span>\n            context<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n              tag\n            <span class=\"token punctuation\">}</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">const</span> categoryList <span class=\"token operator\">=</span> Array<span class=\"token punctuation\">.</span><span class=\"token keyword\">from</span><span class=\"token punctuation\">(</span>categorySet<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        categoryList<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>category <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n          <span class=\"token function\">createPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n            path<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`/categories/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">kebabCase</span><span class=\"token punctuation\">(</span>category<span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/`</span></span><span class=\"token punctuation\">,</span>\n            component<span class=\"token punctuation\">:</span> categoryPage<span class=\"token punctuation\">,</span>\n            context<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n              category\n            <span class=\"token punctuation\">}</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>",
            "fields": {
              "slug": "/docs/pages/Gatsby-Advanced/"
            }
          }
        }
      ]
    }
  }
}
